name: Deploy

on:
  push:
    branches:
      - main  # Или любая другая ветка для деплоя

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Run go mod tidy
        run: go mod tidy

      - name: Run Golangci-lint
        uses: golangci/golangci-lint-action@v6.0.1

      - name: Build project
        run: go build -o build/base-api ./cmd/api

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build/

  deploy:
    needs: lint-and-build
    runs-on: ubuntu-latest
    env:
      HOST: root@87.228.12.165
      DEPLOY_DIRECTORY: /root/apps/base-api
      CONFIG_PATH: /root/apps/base-api/configs/prod.yml
      ENV_FILE_PATH: /root/apps/base-api/config.env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create remote directory
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"

      - name: Create .env file
        run: |
          echo 'COMPOSE_PROJECT_NAME=base-api-backend' >> .env
          echo 'APP_MODE=prod' >> .env
          echo "APP_LISTEN_HOST=${{ secrets.APP_HOST }}" >> .env
          echo "APP_LISTEN_PORT=${{ secrets.APP_PORT }}" >> .env
          echo "DB_EXTERNAL_PORT=${{ secrets.DB_EXTERNAL_PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_SSL_MODE=${{ secrets.DB_SSL_MODE }}" >> .env

      - name: Transfer files via SSH
        run: |
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ./ ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}/

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ env.HOST }} << 'EOF'
            cd ${{ env.DEPLOY_DIRECTORY }}
            chmod +x scripts/set_config.sh
            ./scripts/set_config.sh
            docker-compose down
            docker-compose up -d --build
          EOF